@inject ViewModels.ISmartphoneDetailsViewModel viewModel
@page "/details/{SmartphoneId}"



<RadzenCard Class="rz-my-12 rz-mx-auto" Style="max-width: 420px">
    <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.Start" Gap="1rem" Class="rz-p-4">
        <RadzenImage Path="@viewModel.Model.PhotoUrl" Style="width: 340px; height: 320px;" />
        <RadzenStack Gap="0">
        </RadzenStack>
    </RadzenStack>
    <RadzenCard class="rz-background-color-primary-light rz-shadow-0 rz-border-radius-0 rz-p-8" style="margin: 1rem calc(-1 * var(--rz-card-padding));">
        <RadzenText TextStyle="TextStyle.H4" class="rz-color-on-primary-light"><strong>Details</strong></RadzenText>
        <RadzenRow RowGap="0">
            <RadzenColumn SizeSM="10">
                <RadzenText TextStyle="TextStyle.Overline" class="rz-display-flex rz-mt-2 rz-my-0">Smartphone</RadzenText>
                <RadzenText TextStyle="TextStyle.Body1"><b>@viewModel.Model.Name</b></RadzenText>
                <RadzenText TextStyle="TextStyle.Overline" class="rz-color-on-primary-light rz-display-flex rz-mt-4 rz-mb-0">RAM</RadzenText>
                <RadzenText TextStyle="TextStyle.Body1" class="rz-color-on-primary-light"><b>@viewModel.Model.RAM</b></RadzenText>
                <RadzenText TextStyle="TextStyle.Overline" class="rz-color-on-primary-light rz-display-flex rz-mt-4 rz-mb-0">Memory</RadzenText>
                <RadzenText TextStyle="TextStyle.Body1" class="rz-color-on-primary-light"><b>@viewModel.Model.Memory</b></RadzenText>
                <RadzenText TextStyle="TextStyle.Overline" class="rz-color-on-primary-light rz-display-flex rz-mt-4 rz-mb-0">Screen</RadzenText>
                <RadzenText TextStyle="TextStyle.Body1" class="rz-color-on-primary-light"><b>@viewModel.Model.ScreenDiagonal</b></RadzenText>
                <RadzenText TextStyle="TextStyle.Overline" class="rz-color-on-primary-light rz-display-flex rz-mt-4 rz-mb-0">Resolution</RadzenText>
                <RadzenText TextStyle="TextStyle.Body1" class="rz-color-on-primary-light"><b>@viewModel.Model.Resolution</b></RadzenText>
                <RadzenText TextStyle="TextStyle.Overline" class="rz-color-on-primary-light rz-display-flex rz-mt-4 rz-mb-0">Cameras</RadzenText>
                @foreach (var camera in viewModel.Model.Cameras)
                {
                    <RadzenText TextStyle="TextStyle.Body1" class="rz-color-on-primary-light"><b>MP: @camera.Mpix</b></RadzenText>
                    <RadzenText TextStyle="TextStyle.Body1" class="rz-color-on-primary-light"><b>Type: @camera.TypeOfCamera</b></RadzenText>
                    <RadzenText TextStyle="TextStyle.Body1" class="rz-color-on-primary-light"><b>Video Resolution: @camera.WideoResolution</b></RadzenText>
                }
                <RadzenText TextStyle="TextStyle.Overline" class="rz-color-on-primary-light rz-display-flex rz-mt-4 rz-mb-0">Colors</RadzenText>
                @foreach (var color in viewModel.Model.Colors)
                {
                    <RadzenText TextStyle="TextStyle.Body1" class="rz-color-on-primary-light"><b>@color.Name</b></RadzenText>
                    
                }
            </RadzenColumn>
        </RadzenRow>
    </RadzenCard>
</RadzenCard>



@code{
    [Parameter]
    public string SmartphoneId { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        await viewModel.GetSmartphoneById(SmartphoneId);
    }
}